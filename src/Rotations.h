#pragma once
#include "PieceType.h"
#include <array>
#include <vector>

namespace Pieces 
{
	using RotatedPiece = std::array<std::array<bool, 4>, 4>;
	using RotatedPieceList = std::array<RotatedPiece, 4>;

	namespace Rotations
	{
		const RotatedPieceList None;

		const RotatedPieceList O =
		{{
			{{
				{{0, 1, 1, 0}},
				{{0, 1, 1, 0}},
				{{0, 0, 0, 0}},
				{{0, 0, 0, 0}},
			}}
		}};

		const RotatedPieceList I =
		{{
			{{
				{{0, 0, 0, 0,}},
				{{1, 1, 1, 1,}},
				{{0, 0, 0, 0,}},
				{{0, 0, 0, 0,}},
			}},
			{{
				{{0, 0, 1, 0,}},
				{{0, 0, 1, 0,}},
				{{0, 0, 1, 0,}},
				{{0, 0, 1, 0,}},
			}},
			{{
				{{0, 0, 0, 0,}},
				{{0, 0, 0, 0,}},
				{{1, 1, 1, 1,}},
				{{0, 0, 0, 0,}},
			}},
			{{
				{{0, 1, 0, 0,}},
				{{0, 1, 0, 0,}},
				{{0, 1, 0, 0,}},
				{{0, 1, 0, 0,}},
			}}
		}};

		const RotatedPieceList S =
		{ {
			{{
				{{0, 1, 1, 0}},
				{{1, 1, 0, 0}},
				{{0, 0, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 1, 0, 0}},
				{{0, 1, 1, 0}},
				{{0, 0, 1, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 0, 0, 0}},
				{{0, 1, 1, 0}},
				{{1, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{1, 0, 0, 0}},
				{{1, 1, 0, 0}},
				{{0, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
		}};

		const RotatedPieceList Z =
		{ {
			{{
				{{1, 1, 0, 0}},
				{{0, 1, 1, 0}},
				{{0, 0, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 0, 1, 0}},
				{{0, 1, 1, 0}},
				{{0, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 0, 0, 0}},
				{{1, 1, 0, 0}},
				{{0, 1, 1, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 1, 0, 0}},
				{{1, 1, 0, 0}},
				{{1, 0, 0, 0}},
				{{0, 0, 0, 0}},
			}},
		}};

		const RotatedPieceList T =
		{ {
			{{
				{{0, 1, 0, 0}},
				{{1, 1, 1, 0}},
				{{0, 0, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 1, 0, 0}},
				{{0, 1, 1, 0}},
				{{0, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 0, 0, 0}},
				{{1, 1, 1, 0}},
				{{0, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 1, 0, 0}},
				{{1, 1, 0, 0}},
				{{0, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
		}};

		const RotatedPieceList J =
		{ {
			{{
				{{1, 0, 0, 0}},
				{{1, 1, 1, 0}},
				{{0, 0, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 1, 1, 0}},
				{{0, 1, 0, 0}},
				{{0, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 0, 0, 0}},
				{{1, 1, 1, 0}},
				{{0, 0, 1, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 1, 0, 0}},
				{{0, 1, 0, 0}},
				{{1, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
		}};

		const RotatedPieceList L =
		{ {
			{{
				{{0, 0, 1, 0}},
				{{1, 1, 1, 0}},
				{{0, 0, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 1, 0, 0}},
				{{0, 1, 0, 0}},
				{{0, 1, 1, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{0, 0, 0, 0}},
				{{1, 1, 1, 0}},
				{{1, 0, 0, 0}},
				{{0, 0, 0, 0}},
			}},
			{{
				{{1, 1, 0, 0}},
				{{0, 1, 0, 0}},
				{{0, 1, 0, 0}},
				{{0, 0, 0, 0}},
			}},
		}};

		const RotatedPieceList All[] = { None, O, I, S, Z, T, J, L };
	}
}